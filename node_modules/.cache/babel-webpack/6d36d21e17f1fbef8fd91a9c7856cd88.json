{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./sevices/users.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\n\nfunction AppComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelementStart(1, \"a\", 33);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_0_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.closeToster();\n    });\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 34);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.tosterMessage);\n  }\n}\n\nfunction AppComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelementStart(1, \"a\", 33);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_1_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.closeToster();\n    });\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 34);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.tosterMessageerror);\n  }\n}\n\nfunction AppComponent_i_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 36);\n  }\n}\n\nfunction AppComponent_i_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 37);\n  }\n}\n\nfunction AppComponent_i_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 36);\n  }\n}\n\nfunction AppComponent_i_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 37);\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(fb, route, usersService, toastr) {\n      this.fb = fb;\n      this.route = route;\n      this.usersService = usersService;\n      this.toastr = toastr;\n      this.title = 'affilate';\n      this.siteName = environment.siteName;\n      this.selectedCountry = \"+91\";\n      this.selectedName = \"India\";\n      this.phoneSubmitted = false;\n      this.submitted = false;\n      this.domain = environment.origin;\n      this.origin = environment.origin;\n      this.referralcode = 0;\n      this.Allowedcaptcha = true;\n      this.isClient = false;\n      this.isprepaidOpen = false;\n      this.isPremiumSite = environment.isPremiumSite;\n      this.fullsharechkbx = false;\n      this.userRegDefaultValues = {};\n      this.currentId = 1000000061;\n      this.upperLimit = 1001000060;\n      this.generatedIds = [];\n      this.visiblePassword = false;\n      this.visibleconfirm = false;\n      this.blocktoster = false;\n      this.blocktostererror = false;\n      this.tosterMessage = '';\n      this.tosterMessageerror = '';\n    }\n\n    ngOnInit() {\n      this.initUserRegForm();\n      this.userRegDefaultValues = this.userRegForm.value;\n      this.route.queryParams.subscribe(params => {\n        this.referralcode = params?.['referal_code'];\n\n        if (this.referralcode) {\n          localStorage.removeItem('referral_code');\n          localStorage.setItem('referral_code', this.referralcode);\n          this.userRegForm.get('referredBy')?.setValue(this.referralcode);\n        } else {\n          const storedReferralCode = localStorage.getItem('referral_code');\n\n          if (storedReferralCode) {\n            this.userRegForm.get('referredBy')?.setValue(storedReferralCode);\n          }\n        }\n      });\n    }\n\n    initUserRegForm() {\n      this.userRegForm = this.fb.group({\n        userName: ['', Validators.required],\n        password: ['', Validators.required],\n        con_password: ['', Validators.required],\n        fullName: ['', Validators.required],\n        phoneNumber: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        referredBy: [0]\n      });\n    }\n\n    get pf() {\n      return this.userRegForm?.controls;\n    }\n\n    generateUniqueB2cID() {\n      this.usersService.getAllB2cIDs().subscribe(data => {\n        const existingIds = data.result.map(item => item.b2cID);\n        let newId = null;\n\n        while (!newId || existingIds.includes(newId)) {\n          if (this.currentId > this.upperLimit) {\n            console.error('No more IDs available within the specified range.');\n            return;\n          }\n\n          newId = this.currentId.toString();\n          this.currentId++;\n        }\n\n        this.userRegForm.get('b2cID')?.setValue(newId);\n        this.generatedIds.push(newId);\n      });\n    }\n\n    register() {\n      if (this.userRegForm.invalid) {\n        this.showTostererror('Please fill all required fields!');\n        return;\n      }\n\n      this.usersService.getAllB2cIDs().subscribe(data1 => {\n        const existingIds = data1.result.map(item => item.b2cID);\n        let newId = null;\n\n        while (!newId || existingIds.includes(newId)) {\n          if (this.currentId > this.upperLimit) {\n            console.error('No more IDs available within the specified range.');\n            return;\n          }\n\n          newId = this.currentId.toString();\n          this.currentId++;\n        }\n\n        this.userRegForm.get('b2cID')?.setValue(newId);\n        this.generatedIds.push(newId);\n        const storedReferralCode = localStorage.getItem('referral_code') || this.userRegForm.value.referredBy;\n        let adminUserName = '';\n\n        if (this.siteName === 'babu365') {\n          adminUserName = 'babu365USD';\n        } else if (this.siteName === 'cxwelcome') {\n          adminUserName = 'cxwelcomeUSD';\n        }\n\n        let data = {\n          referredBy: storedReferralCode,\n          adminUserName: adminUserName,\n          userName: this.userRegForm.value.userName,\n          password: this.userRegForm.value.password,\n          con_password: this.userRegForm.value.con_password,\n          fullName: this.userRegForm.value.fullName,\n          userType: 0,\n          domain: this.origin,\n          prepaid: 0,\n          lcbd: 0,\n          lcbd1: 0,\n          lcbd2: 0,\n          isb2c: 1,\n          b2cID: newId,\n          b2cCom: 0,\n          newCom: 0,\n          commission: null,\n          exposureLimit: null,\n          phoneNumber: this.userRegForm.value.phoneNumber,\n          email: this.userRegForm.value.email,\n          adminRefCom: 40,\n          agentRefCom: 10\n        };\n        console.log(data, \"data\");\n        this.usersService.register(data).subscribe(res => {\n          // console.log(res);\n          if (res.errorCode == 0) {\n            this.showToster(\"Registered successfully\");\n            let body = {\n              \"b2cID\": newId,\n              \"domain\": this.origin,\n              \"username\": this.userRegForm.value.userName\n            };\n            setTimeout(() => {\n              this.usersService.postB2cID(body).subscribe(response => {\n                console.log(response);\n              });\n            }, 5000);\n            this.userRegForm.reset();\n          } else {\n            this.showTostererror(res.errorDescription);\n          }\n        });\n      });\n    }\n\n    showPassword() {\n      this.visiblePassword = !this.visiblePassword;\n    }\n\n    showconfirm() {\n      this.visibleconfirm = !this.visibleconfirm;\n    }\n\n    closeToster() {\n      this.blocktoster = false;\n      this.blocktostererror = false;\n    }\n\n    showTostererror(message) {\n      this.tosterMessageerror = message;\n      this.blocktostererror = true;\n      setTimeout(() => {\n        this.closeToster();\n      }, 2000); // Hide after 2 seconds\n    }\n\n    showToster(message) {\n      this.tosterMessage = message;\n      this.blocktoster = true;\n      setTimeout(() => {\n        this.closeToster();\n      }, 2000); // Hide after 2 seconds\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.UsersService), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 54,\n    vars: 11,\n    consts: [[\"id\", \"message\", \"class\", \"custom-toast success\", 4, \"ngIf\"], [\"id\", \"message\", \"class\", \"custom-toast error\", 4, \"ngIf\"], [2, \"background-color\", \"rgb(0, 0, 0)\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-between\", \"pe-3\"], [\"href\", \"/\"], [\"alt\", \"\", 1, \"header_logo\", 3, \"src\"], [1, \"logo_sign\"], [\"target\", \"_blank\", 1, \"af-login\", 3, \"href\"], [\"href\", \"\", 1, \"af-login\"], [1, \"background\"], [1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"placeholder\", \"Enter your username\", \"formControlName\", \"userName\"], [\"for\", \"password\"], [1, \"input-group\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Enter your password\", 3, \"type\"], [1, \"input-group-text\", 2, \"cursor\", \"pointer\", 3, \"click\"], [\"class\", \"fa fa-eye-slash\", \"aria-hidden\", \"true\", \"style\", \"color: #000\", 4, \"ngIf\"], [\"class\", \"fa fa-eye\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"for\", \"confirm-password\"], [\"formControlName\", \"con_password\", \"type\", \"password\", \"id\", \"confirm-password\", \"name\", \"confirm-password\", \"placeholder\", \"Confirm your password\", 3, \"type\"], [\"for\", \"full-name\"], [\"formControlName\", \"fullName\", \"type\", \"text\", \"id\", \"full-name\", \"name\", \"full-name\", \"placeholder\", \"Enter your full name\"], [\"for\", \"phone-number\"], [\"type\", \"tel\", \"id\", \"phone-number\", \"name\", \"phone-number\", \"placeholder\", \"Enter your phone number\", \"formControlName\", \"phoneNumber\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"placeholder\", \"Enter your email address\", \"formControlName\", \"email\"], [\"for\", \"referral-code\"], [\"formControlName\", \"referredBy\", \"type\", \"text\", \"id\", \"referral-code\", \"name\", \"referral-code\", \"placeholder\", \"Enter referral code (if any)\"], [\"type\", \"submit\"], [\"id\", \"message\", 1, \"custom-toast\", \"success\"], [1, \"btn-close\", 2, \"cursor\", \"pointer\", 3, \"click\"], [2, \"margin\", \"0px\", \"font-size\", \"22px\"], [\"id\", \"message\", 1, \"custom-toast\", \"error\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-eye-slash\", 2, \"color\", \"#000\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-eye\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AppComponent_div_0_Template, 5, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, AppComponent_div_1_Template, 5, 1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"header\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"a\", 4);\n        i0.ɵɵelement(5, \"img\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵelementStart(7, \"a\", 7);\n        i0.ɵɵtext(8, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"a\", 8);\n        i0.ɵɵtext(10, \"Signup\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵelementStart(12, \"div\", 10);\n        i0.ɵɵelementStart(13, \"h2\");\n        i0.ɵɵtext(14, \"Affiliate agent\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"form\", 11);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_15_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵelementStart(16, \"div\", 12);\n        i0.ɵɵelementStart(17, \"label\", 13);\n        i0.ɵɵtext(18, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 12);\n        i0.ɵɵelementStart(21, \"label\", 15);\n        i0.ɵɵtext(22, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 16);\n        i0.ɵɵelement(24, \"input\", 17);\n        i0.ɵɵelementStart(25, \"span\", 18);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_span_click_25_listener() {\n          return ctx.showPassword();\n        });\n        i0.ɵɵtemplate(26, AppComponent_i_26_Template, 1, 0, \"i\", 19);\n        i0.ɵɵtemplate(27, AppComponent_i_27_Template, 1, 0, \"i\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 12);\n        i0.ɵɵelementStart(29, \"label\", 21);\n        i0.ɵɵtext(30, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 16);\n        i0.ɵɵelement(32, \"input\", 22);\n        i0.ɵɵelementStart(33, \"span\", 18);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_span_click_33_listener() {\n          return ctx.showconfirm();\n        });\n        i0.ɵɵtemplate(34, AppComponent_i_34_Template, 1, 0, \"i\", 19);\n        i0.ɵɵtemplate(35, AppComponent_i_35_Template, 1, 0, \"i\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 12);\n        i0.ɵɵelementStart(37, \"label\", 23);\n        i0.ɵɵtext(38, \"Full Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 12);\n        i0.ɵɵelementStart(41, \"label\", 25);\n        i0.ɵɵtext(42, \"Phone Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"input\", 26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 12);\n        i0.ɵɵelementStart(45, \"label\", 27);\n        i0.ɵɵtext(46, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"input\", 28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"div\", 12);\n        i0.ɵɵelementStart(49, \"label\", 29);\n        i0.ɵɵtext(50, \"Referral Code (Optional)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(51, \"input\", 30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"button\", 31);\n        i0.ɵɵtext(53, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.blocktoster);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.blocktostererror);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate1(\"src\", \"/assets/images/logos/\", ctx.siteName, \".webp\", i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"href\", \"https://ag.\" + ctx.origin + \"/#/login\", i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.userRegForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"type\", ctx.visiblePassword ? \"text\" : \"password\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.visiblePassword);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.visiblePassword);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"type\", ctx.visibleconfirm ? \"text\" : \"password\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.visibleconfirm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.visibleconfirm);\n      }\n    },\n    directives: [i5.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();\nexport const passwordMatchingValidatior = control => {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n  return password?.value === confirmPassword?.value ? null : {\n    notmatched: true\n  };\n};","map":null,"metadata":{},"sourceType":"module"}