{"version":3,"file":"export-as.service.d.ts","sources":["export-as.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { ExportAsConfig } from './export-as-config.model';\r\nexport declare class ExportAsService {\r\n    constructor();\r\n    /**\r\n     * Main base64 get method, it will return the file as base64 string\r\n     * @param config your config\r\n     */\r\n    get(config: ExportAsConfig): Observable<string | null>;\r\n    /**\r\n     * Save exported file in old javascript way\r\n     * @param config your custom config\r\n     * @param fileName Name of the file to be saved as\r\n     */\r\n    save(config: ExportAsConfig, fileName: string): Observable<string | null>;\r\n    /**\r\n     * Converts content string to blob object\r\n     * @param content string to be converted\r\n     */\r\n    contentToBlob(content: string): Observable<Blob>;\r\n    /**\r\n     * Removes base64 file type from a string like \"data:text/csv;base64,\"\r\n     * @param fileContent the base64 string to remove the type from\r\n     */\r\n    removeFileTypeFromBase64(fileContent: string): string;\r\n    /**\r\n     * Structure the base64 file content with the file type string\r\n     * @param fileContent file content\r\n     * @param fileMime file mime type \"text/csv\"\r\n     */\r\n    addFileTypeToBase64(fileContent: string, fileMime: string): string;\r\n    /**\r\n     * create downloadable file from dataURL\r\n     * @param fileName downloadable file name\r\n     * @param dataURL file content as dataURL\r\n     */\r\n    downloadFromDataURL(fileName: string, dataURL: string): void;\r\n    /**\r\n     * Downloads the blob object as a file\r\n     * @param blob file object as blob\r\n     * @param fileName downloadable file name\r\n     */\r\n    downloadFromBlob(blob: Blob, fileName: string): void;\r\n    private saveFile;\r\n    private getPDF;\r\n    private applyPdfCallbackFn;\r\n    private getPNG;\r\n    private getCSV;\r\n    private getTXT;\r\n    private getXLS;\r\n    private getXLSX;\r\n    private getDOCX;\r\n    private getDOC;\r\n    private getJSON;\r\n    private getXML;\r\n    private btoa;\r\n}\r\n"]}