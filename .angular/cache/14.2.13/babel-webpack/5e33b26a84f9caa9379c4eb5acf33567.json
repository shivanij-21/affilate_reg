{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./sevices/users.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction AppComponent_i_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 30);\n  }\n}\n\nfunction AppComponent_i_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 31);\n  }\n}\n\nfunction AppComponent_i_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 30);\n  }\n}\n\nfunction AppComponent_i_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 31);\n  }\n}\n\nconst _c0 = function () {\n  return [\"https://ag.{{origin}}/#/login\"];\n};\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(fb, route, usersService) {\n      this.fb = fb;\n      this.route = route;\n      this.usersService = usersService;\n      this.title = 'affilate';\n      this.siteName = environment.siteName;\n      this.selectedCountry = \"+91\";\n      this.selectedName = \"India\";\n      this.phoneSubmitted = false;\n      this.submitted = false;\n      this.domain = environment.origin;\n      this.origin = environment.origin;\n      this.referralcode = 0;\n      this.currentId = 1000000061;\n      this.upperLimit = 1001000060;\n      this.generatedIds = [];\n      this.Allowedcaptcha = true;\n      this.isClient = false;\n      this.isprepaidOpen = false;\n      this.isPremiumSite = environment.isPremiumSite;\n      this.fullsharechkbx = false;\n      this.userRegDefaultValues = {};\n      this.visiblePassword = false;\n      this.visibleconfirm = false;\n      this.route.queryParams.subscribe(params => {\n        this.referralcode = params?.['referal_code'];\n\n        if (this.referralcode) {\n          localStorage.setItem('referral_code', this.referralcode);\n          this.userRegForm.get('referredBy')?.setValue(this.referralcode);\n        } else {\n          const storedReferralCode = localStorage.getItem('referral_code');\n\n          if (storedReferralCode) {\n            this.userRegForm.get('referredBy')?.setValue(storedReferralCode);\n          }\n        }\n      });\n      this.userRegForm = this.fb.group({\n        userName: ['', Validators.required],\n        password: ['', Validators.required],\n        conf_password: ['', Validators.required],\n        fullName: ['', Validators.required],\n        phoneNumber: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        referredBy: [0]\n      });\n    }\n\n    ngOnInit() {\n      this.initUserRegForm();\n      console.log(\"this.user\", this.userRegForm.value);\n      this.userRegDefaultValues = this.userRegForm.value;\n      this.route.paramMap.subscribe(paramMap => {// this.userType = +paramMap.get('userType');\n      }); // this.register()\n\n      const storedReferralCode = localStorage.getItem('referral_code');\n\n      if (storedReferralCode) {\n        this.userRegForm.get('referredBy')?.setValue(storedReferralCode);\n      }\n    }\n\n    initUserRegForm() {\n      this.userRegForm = this.fb.group({\n        userName: ['', Validators.required],\n        password: ['', Validators.required],\n        conf_password: ['', Validators.required],\n        fullName: ['', Validators.required],\n        phoneNumber: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        referredBy: [0]\n      });\n      console.log(\"this.user\", this.userRegForm.value);\n    }\n\n    get pf() {\n      return this.userRegForm?.controls;\n    }\n\n    generateUniqueB2cID() {\n      this.usersService.getAllB2cIDs().subscribe(data => {\n        const existingIds = data.result.map(item => item.b2cID);\n        let newId = null;\n\n        while (!newId || existingIds.includes(newId)) {\n          if (this.currentId > this.upperLimit) {\n            console.error('No more IDs available within the specified range.');\n            return;\n          }\n\n          newId = this.currentId.toString();\n          this.currentId++;\n        }\n\n        this.userRegForm.get('b2cID')?.setValue(newId);\n        this.generatedIds.push(newId);\n      });\n    }\n\n    register() {\n      this.usersService.getAllB2cIDs().subscribe(data1 => {\n        const existingIds = data1.result.map(item => item.b2cID);\n        let newId = null;\n\n        while (!newId || existingIds.includes(newId)) {\n          if (this.currentId > this.upperLimit) {\n            console.error('No more IDs available within the specified range.');\n            return;\n          }\n\n          newId = this.currentId.toString();\n          this.currentId++;\n        }\n\n        this.userRegForm.get('b2cID')?.setValue(newId);\n        this.generatedIds.push(newId);\n        const storedReferralCode = localStorage.getItem('referral_code') || this.userRegForm.value.referredBy;\n        let adminUserName = '';\n\n        if (this.siteName === 'babu365') {\n          adminUserName = 'babu365USD';\n        } else if (this.siteName === 'cxwelcome') {\n          adminUserName = 'cxwelcomeUSD';\n        }\n\n        let data = {\n          referredBy: storedReferralCode,\n          adminUserName: adminUserName,\n          userName: this.userRegForm.value.userName,\n          password: this.userRegForm.value.password,\n          conf_password: this.userRegForm.value.conf_password,\n          fullName: this.userRegForm.value.fullName,\n          userType: 0,\n          domain: this.origin,\n          prepaid: 0,\n          lcbd: 0,\n          lcbd1: 0,\n          lcbd2: 0,\n          isb2c: 1,\n          b2cID: newId,\n          b2cCom: 0,\n          newCom: 0,\n          commission: null,\n          exposureLimit: null,\n          phoneNumber: this.userRegForm.value.phoneNumber,\n          email: this.userRegForm.value.email,\n          adminRefCom: 50,\n          agentRefCom: 10\n        };\n        console.log(data, \"data\");\n        this.usersService.register(data).subscribe(res => {\n          // console.log(res);\n          if (res.errorCode == 0) {\n            let body = {\n              \"b2cID\": newId,\n              \"domain\": this.origin,\n              \"username\": this.userRegForm.value.userName\n            };\n            setTimeout(() => {\n              this.usersService.postB2cID(body).subscribe(response => {\n                console.log(response);\n              });\n            }, 5000);\n          }\n        });\n      });\n    }\n\n    stakeformatted() {\n      if (this.userRegForm.value.stake1) {\n        var stakes = [this.userRegForm.value.stake1, this.userRegForm.value.stake2, this.userRegForm.value.stake3, this.userRegForm.value.stake4, this.userRegForm.value.stake5, this.userRegForm.value.stake6, this.userRegForm.value.stake7, this.userRegForm.value.stake8, this.userRegForm.value.stake9, this.userRegForm.value.stake10];\n      } else {\n        var stakes = [];\n      }\n\n      return stakes.toString();\n    }\n\n    showPassword() {\n      this.visiblePassword = !this.visiblePassword;\n    }\n\n    showconfirm() {\n      this.visibleconfirm = !this.visibleconfirm;\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.UsersService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 60,\n    vars: 10,\n    consts: [[\"id\", \"root\"], [1, \"affiliate-page\"], [2, \"background-color\", \"rgb(0, 0, 0)\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-between\", \"pe-3\"], [\"href\", \"/\"], [\"alt\", \"\", 1, \"header_logo\", 3, \"src\"], [1, \"logo_sign\"], [\"href\", \"\", \"target\", \"_blank\", 1, \"af-login\", 3, \"href\"], [\"href\", \"\", 1, \"af-login\"], [1, \"data\"], [1, \"afilate-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-group\", \"pb-1\"], [1, \"mb-0\", \"form-label\"], [\"name\", \"username\", \"formControlName\", \"userName\", 1, \"p-1\", \"form-control\"], [1, \"myform\"], [1, \"form-label\"], [1, \"input-group\"], [\"name\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"type\"], [1, \"input-group-text\", 2, \"cursor\", \"pointer\", 3, \"click\"], [\"class\", \"fa fa-eye-slash\", \"aria-hidden\", \"true\", \"style\", \"color: #000\", 4, \"ngIf\"], [\"class\", \"fa fa-eye\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"name\", \"password\", \"formControlName\", \"con_password\", 1, \"form-control\", 3, \"type\"], [1, \"form-group\"], [\"name\", \"fullName\", \"formControlName\", \"fullName\", 1, \"p-1\", \"form-control\"], [\"name\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", 1, \"p-1\", \"form-control\"], [\"name\", \"email\", \"formControlName\", \"email\", 1, \"p-1\", \"form-control\"], [\"name\", \"referredBy\", \"formControlName\", \"referredBy\", 1, \"p-1\", \"form-control\"], [1, \"w-100\"], [\"type\", \"submit\", 1, \"w-100\", \"btn\", \"btn-primary\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-eye-slash\", 2, \"color\", \"#000\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-eye\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"header\", 2)(3, \"div\", 3)(4, \"a\", 4);\n        i0.ɵɵelement(5, \"img\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 6)(7, \"a\", 7);\n        i0.ɵɵtext(8, \" Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"a\", 8);\n        i0.ɵɵtext(10, \"Signup\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"form\", 10);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_12_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵelementStart(13, \"div\", 11)(14, \"div\", 12)(15, \"label\", 13);\n        i0.ɵɵtext(16, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 11)(19, \"div\", 15)(20, \"label\", 16);\n        i0.ɵɵtext(21, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 17);\n        i0.ɵɵelement(23, \"input\", 18);\n        i0.ɵɵelementStart(24, \"span\", 19);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_span_click_24_listener() {\n          return ctx.showPassword();\n        });\n        i0.ɵɵtemplate(25, AppComponent_i_25_Template, 1, 0, \"i\", 20);\n        i0.ɵɵtemplate(26, AppComponent_i_26_Template, 1, 0, \"i\", 21);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(27, \"div\", 11)(28, \"div\", 15)(29, \"label\", 16);\n        i0.ɵɵtext(30, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 17);\n        i0.ɵɵelement(32, \"input\", 22);\n        i0.ɵɵelementStart(33, \"span\", 19);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_span_click_33_listener() {\n          return ctx.showconfirm();\n        });\n        i0.ɵɵtemplate(34, AppComponent_i_34_Template, 1, 0, \"i\", 20);\n        i0.ɵɵtemplate(35, AppComponent_i_35_Template, 1, 0, \"i\", 21);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(36, \"div\", 11)(37, \"div\", 23)(38, \"label\", 16);\n        i0.ɵɵtext(39, \"Full Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(41, \"div\", 11)(42, \"div\", 23)(43, \"label\", 16);\n        i0.ɵɵtext(44, \"Phone Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"input\", 25);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(46, \"div\", 11)(47, \"div\", 23)(48, \"label\", 16);\n        i0.ɵɵtext(49, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(50, \"input\", 26);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(51, \"div\", 11)(52, \"div\", 23)(53, \"label\", 16);\n        i0.ɵɵtext(54, \"Referral Code (Optional)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(55, \"input\", 27);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(56, \"div\", 28)(57, \"button\", 29);\n        i0.ɵɵtext(58, \"Submit\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelement(59, \"router-outlet\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵpropertyInterpolate1(\"src\", \"/assets/images/logos/\", ctx.siteName, \".webp\", i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"href\", i0.ɵɵpureFunction0(9, _c0), i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.userRegForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"type\", ctx.visiblePassword ? \"text\" : \"password\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.visiblePassword);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.visiblePassword);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"type\", ctx.visibleconfirm ? \"text\" : \"password\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.visibleconfirm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.visibleconfirm);\n      }\n    },\n    dependencies: [i4.NgIf, i2.RouterOutlet, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return AppComponent;\n})();\nexport const passwordMatchingValidatior = control => {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n  return password?.value === confirmPassword?.value ? null : {\n    notmatched: true\n  };\n};","map":null,"metadata":{},"sourceType":"module"}